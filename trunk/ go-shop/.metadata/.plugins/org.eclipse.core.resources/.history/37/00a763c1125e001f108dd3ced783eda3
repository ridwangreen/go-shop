
/*
 * Board.java
 *
 * Version:
 * $Id$
 *
 * Revisions:
 * $Log$
 */

import java.awt.AWTEvent;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.AWTEventListener;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 * Creates a board for the frenzy game
 *
 * @author Rebecca Dudley
 */
public class BoardView  {

	private static FrenzyButton buttons[][];
	private static JFrame gameFrame;
	private static Player player;
	public FrenzyModel model;
	
	/**
	 * creates a new board with given diameters
	 * 
	 * @param height   the height of the game board
	 * @param width    the width of the game board
	 */
	public BoardView(int length, FrenzyModel model) {
		
		this.model = model;
		gameFrame = new JFrame();
		player = new Player(length/2, length/2, length);
		BoardController controller = new BoardController(this, model);
        gameFrame.addKeyListener(controller);
        long eventMask = AWTEvent.KEY_EVENT_MASK; 
        gameFrame.getToolkit().addAWTEventListener(controller, eventMask);
        
		gameFrame.setLayout(new BorderLayout());
		createTopPanel(gameFrame);
		createButtonPanel(gameFrame, length);
		updatePlayerView(player, 0,0);
		gameFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		gameFrame.pack();
		gameFrame.setVisible(true);
		
	}
	
	/**
	 * creates the top panel for the game board
	 * 
	 * @param frame   the frame that holds the top panel
	 */
	public void createTopPanel(JFrame frame){
		
		JPanel container = new JPanel();
		container.setLayout(new GridLayout(1,4));
		JPanel labels = new JPanel();
		labels.setLayout(new GridLayout(2,1));
		JLabel consump = new JLabel("Consumption");
		JLabel player = new JLabel("Peice is P");
		labels.add(consump);
		labels.add(player);
		container.add(labels);
		JPanel values = new JPanel();
		values.setLayout(new GridLayout(2,1));
		JLabel amountEaten = new JLabel();
		amountEaten.setBorder(BorderFactory.createLineBorder(Color.GRAY));
		JLabel gameStatus = new JLabel();
		gameStatus.setBorder(BorderFactory.createLineBorder(Color.GRAY));
		values.add(amountEaten);
		values.add(gameStatus);
		container.add(values);
		JPanel ateList = new JPanel();
		ateList.setLayout(new GridLayout(1,1));
		JLabel whoAte = new JLabel();
		whoAte.setBorder(BorderFactory.createLineBorder(Color.GRAY));
		ateList.add(whoAte);
		container.add(ateList);
		JPanel clicks = new JPanel();
		clicks.setLayout(new GridLayout(3,2));
		JCheckBox pause = new JCheckBox("Pause");
		clicks.add(pause);
		clicks.add(new JLabel());
		clicks.add(new JButton("+ +"));
		clicks.add(new JButton("- -"));
		clicks.add(new JButton("Restart"));
		JButton quit = new JButton("Quit");
		clicks.add(quit);
		quit.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent arg0) {
				gameFrame.dispose();
				
			}});
		container.add(clicks);
		frame.add(container, BorderLayout.NORTH);
		
	}
	
	public static JFrame getFrame(){
		return gameFrame;
	}
	
	/**
	 * creates the button planel for the game board with given diameters
	 * 
	 * @param frame  the frame to add the buttons to
	 * @param height  the height of the panel
	 * @param width   the width of the panel
	 */
	public void createButtonPanel(JFrame frame,int length){
		JPanel bPanel = new JPanel();
		bPanel.setBorder(BorderFactory.createTitledBorder("Game Board"));
		bPanel.setLayout(new GridLayout(length,length));
		FrenzyButton clicky;
		for(int r = 0; r < length; r++){
			for(int c = 0; c < length; c++){
				clicky = new FrenzyButton(r,c);
				bPanel.add(clicky);
				clicky.addActionListener(new FrenzyListener(this));
				buttons[r][c] = clicky;
			}
		}
		frame.add(bPanel, BorderLayout.CENTER);
	}
	
	public FrenzyButton[][] getButtons(){
		return buttons;
	}
   

    
    
    /**
     * makes the player graphics
     * 
     * @param p   the player peice
     * @param x   the old x coordinate
     * @param y   the old y corrdinate
     */
    public void updatePlayerView(Player p, int x, int y){
    	
    	buttons[y][x].setBackground(null);
    	buttons[p.getY()][p.getX()].setBackground(Color.YELLOW);
    	buttons[y][x].setText("");
    	buttons[p.getY()][p.getX()].setText("P");
    	
    }
	
}
