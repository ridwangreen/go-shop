import java.awt.AWTEvent;
import java.awt.event.AWTEventListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;


public class BoardController implements KeyListener, AWTEventListener{
	
	/**
     *  Invoked when an event is dispatched in the AWT.
     *  @param event - the dispatched event
     */
    public void eventDispatched(AWTEvent event) {

        if ( event instanceof KeyEvent ) {
            KeyEvent kEvent = (KeyEvent)event;
            // relay key event to all registered key listeners 
            for (KeyListener kl : gameFrame.getKeyListeners()) {
                switch (kEvent.getID()) {
                case KeyEvent.KEY_PRESSED:
                    kl.keyPressed(kEvent);
                    break;
                case KeyEvent.KEY_RELEASED:
                    kl.keyReleased(kEvent);
                    break;
                case KeyEvent.KEY_TYPED:
                    kl.keyTyped(kEvent);
                    break;
                }
            }
        }
    }

    /**
     * Invoked when a key has been pressed.
     * @param e - the event object
     */
    public void keyPressed(KeyEvent e) {

    	int x = player.getX();
        int y = player.getY();
        switch (e.getKeyCode()) {
        case KeyEvent.VK_UP:
        	player.moveUp();
        	updatePlayerView(player, x, y);
            break;
        case KeyEvent.VK_DOWN:
            player.moveDown();
            updatePlayerView(player, x, y);
            break;
        case KeyEvent.VK_LEFT:
            player.moveLeft();
            updatePlayerView(player, x ,y);
            break;
        case KeyEvent.VK_RIGHT:
            player.moveRight();
            updatePlayerView(player, x, y);
            break;
        default:
            System.out.println( "other key: " + e.getKeyChar() );
        }
        
    }

    /**
     * Invoked when a key has been released.
     * @param e - the event object
     */
    public void keyReleased(KeyEvent e) { 

    }

    /**
     * Invoked when a key has been typed.
     * @param e - the event object
     */
    public void keyTyped(KeyEvent e) { 

    }

}
