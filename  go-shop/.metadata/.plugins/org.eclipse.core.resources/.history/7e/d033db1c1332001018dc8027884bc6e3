package GUI;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import control.SixAxisController;

public class PastOrderView extends JFrame {

	/**
	 * Yeah.
	 */
	private static final long	serialVersionUID	= 1L;

	private JButton				back;
	private JPanel				bottom;
	private JButton				cancel;
	private JPanel				cancelPanel;
	private JPanel				labelPanel;
	private SixAxisController	listener;
	private JPanel				listPanel;
	private JPanel				okPanel;
	private JList				previousOrdersList;
	private JScrollPane			previousOrderPane;
	private JLabel				warning;

	public PastOrderView( SixAxisController controller ) {
		listener = controller;
		initComponents();
	}

	private void initComponents() {

		setDefaultCloseOperation( javax.swing.WindowConstants.EXIT_ON_CLOSE );
		setLayout( new BorderLayout() );
		setTitle( "Past Orders" );

		back = new JButton( "Back" );
		copy = new JButton( "Copy" );

		back.addActionListener( listener );
		copy.addActionListener( listener );

		listPanel = new JPanel();
		previousOrderPane = new JScrollPane();
		previousOrdersList = new JList();
		previousOrderPane.setViewportView( previousOrdersList );
		listPanel.add( previousOrderPane );

		add( listPanel, BorderLayout.NORTH );

		bottom = new JPanel();
		bottom.setLayout( new BorderLayout() );
		JPanel backPanel = new JPanel();
		JPanel copyPanel = new JPanel();
		backPanel.add( back );
		copyPanel.add( copy );
		bottom.add( backPanel, BorderLayout.WEST );
		bottom.add( copyPanel, BorderLayout.EAST );

		add( bottom, BorderLayout.SOUTH );

		final JFrame overrideScreen = new JFrame();

		warning = new JLabel(
				"Warning you are about to override previous Order" );
		labelPanel = new JPanel();
		labelPanel.add( warning );
		ok = new JButton( "Ok" );
		cancel = new JButton( "Cancel" );

		ok.addActionListener( listener );

		okPanel = new JPanel();
		cancelPanel = new JPanel();
		okPanel.add( ok );
		cancelPanel.add( cancel );

		ok.addActionListener( null );
		cancel.addActionListener( listener );

		overrideScreen.setLayout( new BorderLayout() );
		overrideScreen.add( labelPanel, BorderLayout.NORTH );
		overrideScreen.add( okPanel, BorderLayout.WEST );
		overrideScreen.add( cancelPanel, BorderLayout.EAST );
		setDefaultCloseOperation( javax.swing.WindowConstants.EXIT_ON_CLOSE );
		overrideScreen.pack();
		overrideScreen.setResizable( false );
		overrideScreen.setVisible( false );
		copy.addActionListener( listener );
		pack();
	}

	public static void main( String args[] ) {
		java.awt.EventQueue.invokeLater( new Runnable() {

			public void run() {
				new PastOrderView( null ).setVisible( true );
			}
		} );
	}

}
